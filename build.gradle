buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.watchdog.pullrequest'
version = '1.0.3-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jar {
    manifest {
        attributes 'Watchdog-Version': version
    }
    archivesBaseName = "pullrequests-watchdog"
    project.version = null
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.retry:spring-retry:1.2.4.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('org.springframework.boot:spring-boot-starter-quartz')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.reflections:reflections:0.9.11')
	compile('com.google.guava:guava:27.0.1-jre')
	compile('org.aspectj:aspectjweaver:1.9.2')
	compile('org.projectlombok:lombok:1.18.6')
	compile('commons-lang:commons-lang:2.6')
	compile("me.ramswaroop.jbot:jbot:3.0.2")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile('cz.jirutka.spring:embedmongo-spring:1.3.1')
	testCompile('org.powermock:powermock-module-junit4:2.0.0')
	testCompile('org.powermock:powermock-api-mockito2:2.0.0')

}

configurations {
	compile.exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-logging')
	complie.exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
	compile.exclude(group: 'ch.qos.logback', module: 'logback-classic')
}
